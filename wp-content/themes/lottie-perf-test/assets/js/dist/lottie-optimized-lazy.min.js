(function() {'use strict';let scriptLoaded = false;let scriptLoading = false;let pendingPlayers = [];const perfStart = performance.now();console.log('Optimized Lazy Loading initialized at:',perfStart);const scriptObserver = new IntersectionObserver((entries,observer) => {entries.forEach(entry => {if (entry.isIntersecting && !scriptLoaded && !scriptLoading) {console.log('First animation in view,loading LottiePlayer script...');loadLottiePlayerScript();observer.disconnect()}})},{threshold: 0.1,rootMargin: '100px'});function loadLottiePlayerScript() {if (scriptLoading || scriptLoaded) return;scriptLoading = true;const loadStart = performance.now();const script = document.createElement('script');script.type = 'module';script.src = '/wp-content/themes/lottie-perf-test/assets/js/dotlottie-player-correct.mjs';script.defer = true;script.onload = function() {scriptLoaded = true;scriptLoading = false;const loadEnd = performance.now();console.log(`LottiePlayer script loaded in ${(loadEnd - loadStart).toFixed(2)}ms`);initializePendingPlayers()};script.onerror = function() {console.error('Failed to load LottiePlayer script');scriptLoading = false};document.head.appendChild(script)} function initializePendingPlayers() {console.log('Initializing',pendingPlayers.length,'pending players');if (customElements.get('dotlottie-player')) {setupPlayers()} else {customElements.whenDefined('dotlottie-player').then(() => {setupPlayers()})} function setupPlayers() {pendingPlayers.forEach((player,index) => {console.log(`Setting up player ${index + 1}:`,player.src);const animationObserver = new IntersectionObserver((entries,observer) => {entries.forEach(entry => {if (entry.isIntersecting) {console.log(`Starting animation for player ${index + 1}`);if (!player.getAttribute('renderer')) {player.setAttribute('renderer','canvas')} if (player.play) {player.play()} observer.unobserve(player)}})},{threshold: 0.1,rootMargin: '50px'});if (player.pause) {player.pause()} player.addEventListener('ready',() => {console.log(`Player ${index + 1} ready`)});player.addEventListener('error',(e) => {console.error(`Player ${index + 1} error:`,e)});animationObserver.observe(player)})}} if (document.readyState === 'loading') {document.addEventListener('DOMContentLoaded',initialize)} else {initialize()} function initialize() {console.log('DOM ready,setting up lazy loading');const players = document.querySelectorAll('dotlottie-player');console.log('Found',players.length,'dotlottie-player elements');if (players.length === 0) {console.log('No players found');return} pendingPlayers = Array.from(players);if (players.length > 0) {scriptObserver.observe(players[0])} const perfEnd = performance.now();console.log(`Lazy loading setup completed in ${(perfEnd - perfStart).toFixed(2)}ms`)} window.lottieLazyLoader = {scriptLoaded: () => scriptLoaded,scriptLoading: () => scriptLoading,pendingPlayers: () => pendingPlayers.length}})();